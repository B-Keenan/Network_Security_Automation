# Create a terminal service resource profile and assign to an existing User Role.
# Retrieve contents, e.g.
# Hostname User ID
# PC0001 ben
# PC0002 alice
#
# Iterate over the list, creating a resource profile and/or User Role for every 2 items, respectively.
# Custom variables: pc_user_list (list), domain (static), input_file (txt file)
---
- name: Create pc_user_list from input content
  ansible.builtin.set_fact:
    pc_user_list: "{{ input_content.split('\n')[1:] | map('split', ' ') | list }}"
  when: input_content is defined

- name: Check for duplicate pc_names
  ansible.builtin.fail:
    msg: "Duplicate name found: {{ item[0] }}. Each name must be unique."
  when: (pc_user_list | map('first') | list | unique | length) != (pc_user_list | length)
  loop: "{{ pc_user_list }}"
  loop_control:
    label: "{{ item[0] }}"

- name: Iterate over pc_user_list to create resource profiles
  block:
    - name: Create Terminal Service Profile and Assign User Role
      ansible.builtin.uri:
        url: "https://{{ ansible_host }}:{{ device_https_port }}/api/v1/configuration/users/resource-profiles/terminal-services-profiles/terminal-services-profile"
        method: POST
        force_basic_auth: yes
        headers:
          Accept: "application/json"
          Authorization: 'Basic {{ authorization }}'
          Content-Type: "application/json"
        body_format: json
        body:
          name: "{{ item[0] }}"
          roles:
            - "{{ item[1] }} RDP Users"
          wts:
            applet: "Premier Java RDP Applet"
            host: "{{ item[0] }}.{{ domain }}"
            sessions:
              session:
                - alias-name: ""
                  allow-clipboard: "false"
                  application-path: ""
                  apply: "all"
                  auto-launch: "false"
                  color-depth: "32bit"
                  connect-comports: "false"
                  connect-drives: "false"
                  connect-printers: "true"
                  connect-smartcards: "false"
                  description: ""
                  disable-nla: "false"
                  experience-options:
                    bitmap-caching: "false"
                    desktop-background: "false"
                    desktop-composition: "false"
                    font-smoothing: "false"
                    menu-window-animation: "false"
                    show-content-dragging: "false"
                    themes: "false"
                  host: "{{ item[0] }}.{{ domain }}"
                  launch-seamless: "false"
                  microphone-option: "false"
                  multi-mon: "true"
                  name: "{{ item[0] }}"
                  password-type: "variable"
                  path-dir: ""
                  port: "3389"
                  roles: null
                  screen-size: "fullscreen"
                  smartcard-nla: "disabled"
                  sound-options: "bring-to-local"
                  username: "CORPORATE\\{{ item[1] }}"
                  variable-password: ""
        status_code: 201
        validate_certs: false
      register: create_response
      ignore_errors: true
      loop: "{{ pc_user_list }}"
      loop_control:
        label: "{{ item[0] }} - {{ item[1] }}"

    - name: Retrieve the profile details
      ansible.builtin.uri:
        url: "https://{{ ansible_host }}:{{ device_https_port }}/api/v1/configuration/users/resource-profiles/terminal-services-profiles/terminal-services-profile/{{ item[0] }}"
        method: GET
        headers:
          Accept: "application/json"
          Authorization: 'Basic {{ authorization }}'
        body_format: json
        force_basic_auth: yes
        validate_certs: false
      when: profiles_response.status == 404
      loop: "{{ pc_user_list }}"
      loop_control:
        label: "{{ item[0] }} - {{ item[1] }}"
  rescue:
    - name: Handle API errors
      ansible.builtin.debug:
        msg: "Failed to manage resource profile for {{ item[0] }} and {{ item[1] }}."
      when: create_response.status != 201
      loop: "{{ pc_user_list }}"
      loop_control:
        label: "{{ item[0] }} - {{ item[1] }}"