---
- name: Gather pre-upgrade facts
  delegate_to: "{{ inventory_hostname }}"
  run_once: true
  block:
    - name: Register Partitions
      shell: tmsh list auth partition | awk '/auth partition/ {print $3}'
      register: partitions

    - name: Get available volume number to use
      shell: tmsh show sys software status | awk '$5 == "no" {print $1}' | head -1
      register: inactive_volumes

    - name: Get list of existing volume numbers
      shell: tmsh show sys software status | awk '/^HD|^MD/ {print $1}'
      register: existing_volumes

    - name: Determine next available volume
      set_fact:
        next_volume: >-
          {{
            (
              existing_vols.stdout_lines
              | select('match', '^(HD|MD)1\\.\\d+$')
              | map('regex_replace', '^(HD|MD)1\\.', '')
              | map('int')
              | max + 1
            ) | string
          }}
      when: inactive_volumes.stdout == ""

    - name: Determine most common volume prefix if none available
      set_fact:
        most_common_prefix: >-
          {{
            (
              existing_volumes.stdout_lines
              | select('match', '^(HD|MD)1\\.\\d+$')
              | map('regex_search', '^(HD|MD)')
              | list
              | unique
            )[0] if (existing_volumes.stdout_lines | select('match', '^(HD|MD)1\\.\\d+$') | list | length > 0)
          }}
      when: inactive_volumes.stdout == ""

    - name: Set target volume
      set_fact:
        target_volume: "{{ vol.stdout if vol.stdout else most_common_prefix + '1.' + next_volume }}"

    - name: Register date on BIG-IP
      command: date "+%F"
      register: date

    - name: Register failover state
      command: cat /var/prompt/ps1
      register: failover_state

    - name: Check and increase iControl process timeout values if less than 180
      shell: |
        changed=0
        current_icrd_timeout=$(tmsh list sys db icrd.timeout | awk '/value/ {print $2}')
        if [ "$current_icrd_timeout" -lt 180 ]; then
          tmsh modify sys db icrd.timeout value 180
          changed=1
        fi

        current_restjavad_timeout=$(tmsh list sys db restjavad.timeout | awk '/value/ {print $2}')
        if [ "$current_restjavad_timeout" -lt 180 ]; then
          tmsh modify sys db restjavad.timeout value 180
          changed=1
        fi

        current_restnoded_timeout=$(tmsh list sys db restnoded.timeout | awk '/value/ {print $2}')
        if [ "$current_restnoded_timeout" -lt 180 ]; then
          tmsh modify sys db restnoded.timeout value 180
          changed=1
        fi
        echo "changed=$changed"
      register: timeout_check

    - name: Save changes
      command: tmsh save sys config
      when: timeout_check.stdout_lines[-1] | regex_search('changed=1')

    - name: Restart restjavad restnoded
      command: tmsh restart sys service restjavad restnoded
      when: timeout_check.stdout_lines[-1] | regex_search('changed=1')

    - name: Wait for services to start
      wait_for:
        timeout: 30
      when: timeout_check.stdout_lines[-1] | regex_search('changed=1')