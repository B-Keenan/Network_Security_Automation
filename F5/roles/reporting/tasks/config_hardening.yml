---
- name: Gather management access rules
  f5networks.f5_modules.bigip_command:
    commands:
      - list sys httpd allow
      - list sys sshd allow
      - list security firewall management-ip-rules
    provider: "{{ provider }}"
  register: mgmt_acl

- name: Parse management access rules and set status
  set_fact:
    mgmt_access_status: "{{ '✔' if (not (mgmt_acl.stdout | regex_search('allow\\s*{ All }')) or
                                    not (mgmt_acl.stdout | regex_search('management-ip-rules\\s*{ }')))
                                    else '✖' }}"

- name: Set management access notes
  set_fact:
    mgmt_access_notes: "{{ 'Management access restricted' if mgmt_access_status == '✔' else 'Default configuration detected: HTTPD allows all or no management IP rules' }}"

- name: Append management access check to results
  set_fact:
    check_results: "{{ check_results + [{'check_category': 'Management Access', 'check_item': 'Management interface access is restricted via ACLs', 'status': mgmt_access_status, 'notes': mgmt_access_notes}] }}"

- name: Calculate summary metrics
  set_fact:
    total_checks: "{{ check_results | length }}"
    passed_checks: "{{ check_results | selectattr('status', 'equalto', '✔') | length }}"
    failed_checks: "{{ check_results | selectattr('status', 'equalto', '✖') | length }}"
    na_checks: "{{ check_results | selectattr('status', 'equalto', 'N/A') | length }}"
    overall_status: "{{ 'Medium Risk' if (check_results | selectattr('status', 'equalto', '✖') | length) > 0 else 'Low Risk' }}"

- name: Ensure openpyxl is installed
  ansible.builtin.pip:
    name: openpyxl
    executable: pip3
  run_once: true

- name: Create Excel report directory
  ansible.builtin.file:
    path: "{{ excel_report | dirname }}"
    state: directory
    mode: '0755'

- name: Generate Excel report
  ansible.builtin.template:
    src: f5_report_template.py.j2
    dest: ./f5_report_script.py
    mode: '0755'

- name: Run Excel report generation script
  ansible.builtin.command: python3 ./f5_report_script.py
  changed_when: true

# For testing
- name: Copy Excel to remote host
  ansible.builtin.command:
    cmd: "scp -i /tmp/id_rsa -o StrictHostKeyChecking=no {{ excel_report }} benk@10.255.32.210:/var/tmp/"
