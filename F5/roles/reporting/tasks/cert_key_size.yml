- name: List all SSL keys
  f5networks.f5_modules.bigip_command:
    commands:
      - run util bash -c "tmsh -q -c 'cd /; list sys crypto recursive key'"
    provider: "{{ provider }}"
  register: ssl_key_list

- name: Parse SSL key details
  set_fact:
    ssl_key_invalid: >-
      {{
      ssl_key_list.stdout[0].split('sys crypto key')
      | map('regex_replace', '^[\\s\\n]*', '')
      | select('search', 'key-size|key-type')
      | map('regex_search', 'key-size (\\d+).*key-type (\\S+)', '\\1,\\2')
      | map('split', ',')
      | selectattr('0', 'defined')
      | map('extract', [0,1])
      | map('map', 'trim')
      | selectattr('0', 'int')
      | selectattr('0', 'lt', 2048)
      | list
      | count > 0
      or
      (
        ssl_key_list.stdout[0].split('sys crypto key')
        | map('regex_replace', '^[\\s\\n]*', '')
        | select('search', 'key-size|key-type')
        | map('regex_search', 'key-size (\\d+).*key-type (\\S+)', '\\1,\\2')
        | map('split', ',')
        | selectattr('1', 'defined')
        | map('extract', [1])
        | map('trim')
        | select('noneof', ['rsa-private', 'ecdsa-private'])
        | list
        | count > 0
      )
      | ternary('✖', '✔')
      }}

- name: Set SSL key size check notes
  set_fact:
    ssl_key_invalid_notes: >-
      {{
      'SSL keys are valid' if ssl_key_invalid == '✔'
      else 'SSL keys are invalid or insecure (less than 2048 bits or unsupported key type)'
      }}

- name: Append SSL key size check to results
  set_fact: 
    check_results: "{{ check_results + [{
      'check_category': 'SSL/TLS Security',
      'check_item': 'SSL keys are valid',
      'status': ssl_key_invalid,
      'notes': ssl_key_invalid_notes
      }] }}"