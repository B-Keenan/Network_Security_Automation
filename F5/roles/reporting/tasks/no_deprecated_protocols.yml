- name: List ssl profile options
  f5networks.f5_modules.bigip_command:
    commands:
      - run util bash -c "tmsh -q -c 'cd /; list ltm profile client-ssl recursive options'"
      - run util bash -c "tmsh -q -c 'cd /; list ltm profile server-ssl recursive options'"
    provider: "{{ provider }}"
  register: ssl_options

- name: Parse non-default profiles to ensure only tlsv1.2 and 1.3 are enabled
  set_fact:
    ssl_profile_options: "{{ '✖' if ssl_options.stdout | regex_search('ltm profile (client-ssl|server-ssl) (?!(Common/clientssl|Common/clientssl-insecure-compatible|Common/clientssl-quic|Common/clientssl-secure|Common/crypto-server-default-clientssl|Common/splitsession-default-clientssl|Common/wom-default-clientssl|Common/apm-default-serverssl|Common/cloud-service-default-ssl|Common/crypto-client-default-serverssl|Common/do-not-remove-without-replacement|Common/f5aas-default-ssl|Common/pcoip-default-serverssl|Common/serverssl|Common/serverssl-insecure-compatible|Common/serverssl-secure|Common/shape-api-ssl|Common/splitsession-default-serverssl|Common/wom-default-serverssl))(\\S+/)?\\S+\\s*{((no-tlsv1).)*((no-tlsv1\\.1).)*((?!no-tlsv1\\.2).)*(?!no-tlsv1\\.3).*}') else '✔' }}"

- name: Set ssl profile options check notes
  set_fact:
    ssl_profile_options_notes: >-
      {{ 'TLSv1.2 and 1.3 are enabled' if ssl_profile_options == '✔' else 'SSL options allow weak TLS protocol versions' }}

- name: Append ssl options check to results
  set_fact:
    ssl_check_results: "{{ ssl_check_results + [{
      'check_category': 'SSL Profiles',
      'check_item': 'No deprecated protocols in SSL profiles',
      'status': ssl_profile_options,
      'notes': ssl_profile_options_notes
      }] }}"
