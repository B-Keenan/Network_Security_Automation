---
- name: Gather local time
  ansible.builtin.setup:
  delegate_to: localhost
  run_once: true

- name: Gather subsets in Common
  f5networks.f5_modules.bigip_device_info:
    gather_subset:
      - license
      - partitions
    provider: "{{ provider }}"
  register: device_info

- name: Gather subsets for all partitions
  f5networks.f5_modules.bigip_device_info:
    partition: "{{ item }}"
    gather_subset:
      - virtual-servers
      - ltm-pools
      - ssl-certs
    provider: "{{ provider }}"
  loop: "{{ device_info.partitions | json_query('[*].name') }}"
  register: partition_info

- name: Parse data
  set_fact:
    collect_stats:
      virtual_servers: >-
        {{ partition_info.results | map(attribute='virtual_servers')
          | flatten
          | items2dict(key_name='full_path', value_name='availability_status') }}
      ltm_pools: >-
        {{ partition_info.results | map(attribute='ltm_pools')
          | flatten
          | items2dict(key_name='full_path', value_name='availability_status') }}
      ssl_certs: >-
        {{ partition_info.results | map(attribute='ssl_certs')
          | flatten
          | items2dict(key_name='full_path', value_name='expiration_date') }}

- name: Generate BIG-IP status report
  template:
    src: health_check_report.j2
    dest: "/tmp/bigip_status_report_{{ inventory_hostname }}.txt"

# Or import upload_to_s3.yml.
- name: Read rendered report content
  slurp:
    src: "/tmp/bigip_status_report_{{ inventory_hostname }}.txt"
  register: report_content

- name: Set job artifact variable
  set_stats:
    data:
      bigip_status_report: "{{ report_content.content | b64decode }}"